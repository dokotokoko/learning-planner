events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # ログ設定（リバースプロキシ用）
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # パフォーマンス最適化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # gzip圧縮を有効化
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # バックエンドサーバー定義
    upstream backend_servers {
        server backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # フロントエンドサーバー定義（Vite開発サーバー）
    upstream frontend_servers {
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # プロキシ設定のデフォルト値
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m inactive=60m;
    proxy_temp_path /var/tmp;

    server {
        listen 80;
        server_name localhost;

        # セキュリティヘッダー（Cloudflare対応）
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Proxy-Cache $upstream_cache_status;
        
        # Cloudflare Real IP設定
        set_real_ip_from 173.245.48.0/20;
        set_real_ip_from 103.21.244.0/22;
        set_real_ip_from 103.22.200.0/22;
        set_real_ip_from 103.31.4.0/22;
        set_real_ip_from 141.101.64.0/18;
        set_real_ip_from 108.162.192.0/18;
        set_real_ip_from 190.93.240.0/20;
        set_real_ip_from 188.114.96.0/20;
        set_real_ip_from 197.234.240.0/22;
        set_real_ip_from 198.41.128.0/17;
        set_real_ip_from 162.158.0.0/15;
        set_real_ip_from 104.16.0.0/13;
        set_real_ip_from 172.64.0.0/13;
        set_real_ip_from 131.0.72.0/22;
        real_ip_header CF-Connecting-IP;

        # APIリバースプロキシ設定（FastAPI）
        location /api/ {
            # リバースプロキシの基本設定
            proxy_pass http://backend_servers/;
            proxy_redirect off;
            
            # リクエストヘッダーの設定
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # タイムアウト設定
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # バッファリング設定
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # HTTP/1.1 keepalive設定
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # エラーページ設定
            proxy_intercept_errors on;
            
            # API用キャッシュ設定（必要に応じて）
            proxy_cache api_cache;
            proxy_cache_key $scheme$request_method$host$request_uri;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_pragma $http_authorization;
        }

        # フロントエンドプロキシ設定（Vite開発サーバー）
        location / {
            # Vite開発サーバーへのプロキシ
            proxy_pass http://frontend_servers/;
            proxy_redirect off;
            
            # リクエストヘッダーの設定
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # WebSocket対応（Vite HMR用）
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # タイムアウト設定
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # バッファリング設定（開発用に無効化）
            proxy_buffering off;
            
            # キャッシュ無効化（開発用）
            proxy_cache_bypass $http_pragma $http_authorization;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # WebSocket専用エンドポイント（Vite HMR用）
        location /vite-hmr {
            proxy_pass http://frontend_servers/vite-hmr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket用タイムアウト設定
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # ヘルスチェック用エンドポイント
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # favicon.ico の特別処理
        location = /favicon.ico {
            proxy_pass http://frontend_servers/favicon.ico;
            log_not_found off;
            access_log off;
        }

        # robots.txt の特別処理
        location = /robots.txt {
            proxy_pass http://frontend_servers/robots.txt;
            log_not_found off;
            access_log off;
        }

        # エラーページ設定
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            return 500 "Server Error";
            add_header Content-Type text/plain;
        }
    }
} 